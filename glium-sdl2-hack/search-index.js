var searchIndex = {};
searchIndex["glium_sdl2_hack"] = {"doc":"An unsafe backend for SDL + Glium that makes it possible to collect input events on the main thread while rendering on a child thread. See `./README.md` for more details and `./example/example.rs` for a usage example.","items":[[3,"SdlGliumDisplayFacade","glium_sdl2_hack","Represents the combined SDL window context + Glium rendering context.",null,null],[3,"SdlGlWindowBackend","","This type is transferrable to another thread.",null,null],[4,"BackendBuildError","","",null,null],[13,"WindowBuildError","","",0,null],[13,"ContextCreationError","","",0,null],[6,"Display","","",null,null],[6,"Window","","",null,null],[8,"SdlGlWindowBuilder","","Implementing this trait for `sdl2::video::WindowBuilder` makes creating a new window backend a little more ergonomic.",null,null],[10,"build_backend","","Builds a window backend and releases the context.",1,{"inputs":[{"name":"self"}],"output":{"generics":["sdlglwindowbackend","backendbuilderror"],"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"sdlgliumdisplayfacade"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"window","","⚠ Warning: the returned window reference does not contain a \"real\" reference to the `sdl2::VideoSubsystem`. While most methods should work, it is not possible to create a window from a thread other than the main thread, so the `sdl2::VideoSubsystem::window` function to build a new window should not be called.",2,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"window_mut","","⚠ Warning: the returned window reference does not contain a \"real\" reference to the `sdl2::VideoSubsystem`. While most methods should work, it is not possible to create a window from a thread other than the main thread, so the `sdl2::VideoSubsystem::window` function to build a new window should not be called.",2,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"draw","","Start drawing on the backbuffer.",2,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"build_glium","","Build Glium with current context checks and with default debug callback behavior.",3,{"inputs":[{"name":"self"}],"output":{"generics":["sdlgliumdisplayfacade","incompatibleopengl"],"name":"result"}}],[11,"build_glium_unchecked","","Build Glium without current context checks and with default debug callback behavior.",3,{"inputs":[{"name":"self"}],"output":{"generics":["sdlgliumdisplayfacade","incompatibleopengl"],"name":"result"}}],[11,"build_glium_debug","","Build Glium with current context checks and with the given debug callback behavior.",3,{"inputs":[{"name":"self"},{"name":"debugcallbackbehavior"}],"output":{"generics":["sdlgliumdisplayfacade","incompatibleopengl"],"name":"result"}}],[11,"build_glium_unchecked_debug","","Build Glium without current context checks and with the given debug callback behavior.",3,{"inputs":[{"name":"self"},{"name":"debugcallbackbehavior"}],"output":{"generics":["sdlgliumdisplayfacade","incompatibleopengl"],"name":"result"}}],[11,"drop","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"swap_buffers","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["swapbufferserror"],"name":"result"}}],[11,"get_proc_address","","",3,null],[11,"get_framebuffer_dimensions","","",3,null],[11,"is_current","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"make_current","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",0,{"inputs":[{"name":"windowbuilderror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}]],"paths":[[4,"BackendBuildError"],[8,"SdlGlWindowBuilder"],[3,"SdlGliumDisplayFacade"],[3,"SdlGlWindowBackend"]]};
initSearch(searchIndex);
